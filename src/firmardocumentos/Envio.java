/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package firmardocumentos;

import com.microsoft.sqlserver.jdbc.SQLServerException;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.security.cert.CertificateException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import org.jdom2.Content;
import org.jdom2.Document;
import org.jdom2.Element;
import org.jdom2.JDOMException;
import org.jdom2.input.SAXBuilder;

/**
 *
  * @author cl
 */
public class Envio extends javax.swing.JFrame {
    bas q = new bas();
    public String correofinal = "";
    public String valores;
    public String total;
    public String iva;
    public String subtotal;
    public String numerofactura;
    public String fechagenerada;
    public String claveacceso;
    public String cedula;
    public String Direccion;
    public String Cliente;
    public String noautorizadosjtext1 = "";
    public String serieem;
    public String serieca;
    public String formapago;
    int c = 0;

    /**
     * Creates new form Envio
     */
    public Envio() {
        initComponents();
        // principal() ;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        noautorizadosjtext = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        envioporid = new javax.swing.JCheckBox();
        idaenviar = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nuemodeevnios = new javax.swing.JLabel();
        INICIO = new com.toedter.calendar.JCalendar();
        FIN = new com.toedter.calendar.JCalendar();
        generarRide = new javax.swing.JCheckBox();

        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Rango INICO");

        jLabel2.setText("Rango FINAL");

        jButton1.setText("START");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        noautorizadosjtext.setEditable(false);
        noautorizadosjtext.setColumns(20);
        noautorizadosjtext.setRows(5);
        jScrollPane1.setViewportView(noautorizadosjtext);

        jLabel3.setText("No Autorizados");

        envioporid.setText("Envio por Id");
        envioporid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                envioporidActionPerformed(evt);
            }
        });

        idaenviar.setText(" ");

        jLabel4.setText("NÂ° de envio/s");

        nuemodeevnios.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        nuemodeevnios.setText("0");

        generarRide.setText("GENERAR RIDE");
        generarRide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarRideActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(INICIO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(FIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(nuemodeevnios)
                                .addGap(65, 65, 65))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(generarRide)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(idaenviar, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(envioporid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(29, 29, 29))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(envioporid)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idaenviar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(generarRide))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(INICIO, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FIN, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nuemodeevnios)
                        .addGap(38, 38, 38)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        principal();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void envioporidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_envioporidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_envioporidActionPerformed

    private void generarRideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarRideActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generarRideActionPerformed

    public void principal() {

        Date Inicio1 = INICIO.getDate();
        Date Final1 = FIN.getDate();
        DateFormat f = new SimpleDateFormat("dd/MM/yyyy");
        String Inicio = f.format(Inicio1);
        String Final = f.format(Final1);
        String valoraenviar = "";
        if (envioporid.isSelected()) {
            valoraenviar = "SELECT [serieca],[seriem],[nuemrofactura] ,[cliente],[clave],[fechagenerada],[codigocontrato],[correo] ,[total],[iva] ,[subtotal],[direccion] FROM [BDAirnet].[dbo].[tvdjFacurascliente]  where   iva>0 and SRI='NO' and idfact=" + idaenviar.getText();
        } else {
            valoraenviar = "SELECT [serieca],[seriem],[nuemrofactura] ,[cliente],[clave],[fechagenerada],[codigocontrato],[correo] ,[total],[iva] ,[subtotal],[direccion] FROM [BDAirnet].[dbo].[tvdjFacurascliente]  where  iva>0 and SRI='NO' and Envio='NO' and (fechagenerada between '" + Inicio + "' and '" + Final + "' )";
        }

        q.bas1();
        ResultSet facturas = q.tablas(valoraenviar);

        try {
            while (facturas.next()) {
                correofinal = facturas.getString("correo").replace(" ", "");
                total = facturas.getString("total").replace(" ", "");
                iva = facturas.getString("iva").replace(" ", "");
                subtotal = facturas.getString("subtotal").replace(" ", "");
                numerofactura = facturas.getString("nuemrofactura").replace(" ", "");
                fechagenerada = facturas.getString("fechagenerada").replace(" ", "");
                claveacceso = facturas.getString("clave").replace(" ", "");
                cedula = facturas.getString("codigocontrato").replace(" ", "");
                Direccion = facturas.getString("direccion");
                Cliente = facturas.getString("cliente");
                serieca = facturas.getString("serieca");
                serieem = facturas.getString("seriem");
                if (!generarRide.isSelected()) {
                    firmaryenvio("\\\\S-AIRCONTROL\\ArchivosXmlPrueba\\SRI\\GENERADOS\\" + claveacceso + ".xml",
                             "\\\\S-AIRCONTROL\\ArchivosXmlPrueba\\SRI\\galo_alfredo_alava_macas.p12",
                             "Staticpony39", "\\\\S-AIRCONTROL\\ArchivosXmlPrueba\\SRI\\FIRMADOS", claveacceso + ".xml");
                    valores = "";
                    if (leerxml(claveacceso).contains("Error")) {
                        noautorizadosjtext1 = noautorizadosjtext1 + ("No Autorizado " + claveacceso) + "\n";
                        noautorizadosjtext.setText(noautorizadosjtext1);
                    } else {
                        valores = valores + leerxml(claveacceso);

                        ridefacturav2(valores, claveacceso);
                        q.UpdateModificar("update [BDAirnet].[dbo].[tvdjFacurascliente] set SRI='SI' where clave='" + claveacceso + "'");
                        Thread.sleep(200);
                    }
                } else {
                    ridefacturav2("*", claveacceso);
                    q.UpdateModificar("update [BDAirnet].[dbo].[tvdjFacurascliente] set SRI='SI' where clave='" + claveacceso + "'");
                }

            }

            //  System.exit(0);
        } catch (SQLException | InterruptedException | IOException | JRException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }

    public static String leerxml(String clave)  {
        SAXBuilder builder = new SAXBuilder();
        File xmlFile = new File("\\\\S-AIRCONTROL\\ArchivosXmlPrueba\\SRI\\AUTORIZADOS\\" + clave + ".xml");
  try {
       
            Document document = (Document) builder.build(xmlFile);
            Element rootNode = document.getRootElement();
            List<Content> soapbody = rootNode.getContent();
            Element sp = (Element) soapbody.get(0);
            Element ns2 = sp.getChildren().get(0);
            Element resouesta = ns2.getChild("RespuestaAutorizacionComprobante");
            Element autori = resouesta.getChild("autorizaciones");
            Element art = autori.getChild("autorizacion");
            Element numero = art.getChild("numeroAutorizacion");
            Element estado = art.getChild("estado");
            if (estado.getValue().contains("NO AUTORIZADO")) {

                return "Error";

            } else {
                Element fecha = art.getChild("fechaAutorizacion");
                return numero.getValue() + "-" + estado.getValue() + "-" + fecha.getValue().replace("-", "/") + "-";
            }
             } catch (IOException | JDOMException ex) {
            Logger.getLogger(Envio.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "Error";

       
    }

    public void firmaryenvio(String xmlPath, String pathSignature, String passSignature, String pathOut, String nameFileOut)  {
        try {
            Autorizacion autorizado = new Autorizacion();
            // System.out.println("Ruta del XML de entrada: " + xmlPath);
            // System.out.println("Ruta Certificado: " + pathSignature);
            // System.out.println("Clave del Certificado: " + passSignature);
            // System.out.println("Ruta de salida del XML: " + pathOut);
            // System.out.println("Nombre del archivo salido: " + nameFileOut);
            // String claveac[]=nameFileOut.split(".");
            
            // proceso de firmaelectronica//
            XAdESBESSignature.firmar(xmlPath, pathSignature, passSignature, pathOut, nameFileOut);
            String filePath = pathOut + "\\" + nameFileOut;
            
            String[] claveacceso = nameFileOut.split(".xml");
            byte[] bytes = Files.readAllBytes(Paths.get(filePath));
            System.setProperty("javax.net.ssl.keyStore", "C:\\Program Files (x86)\\Java\\jre1.8.0_261\\lib\\security\\cacerts");
            System.setProperty("javax.net.ssl.keyStorePassword", "changeit");
            RespuestaSolicitud respuesta = validarComprobante(bytes);
            String estado = respuesta.getEstado();
            Thread.sleep(2500);
            if (estado.equals("DEVUELTA")) {
                // System.out.println(respuesta.getEstado());
            } else {
                if (estado.equals("RECIBIDA")) {
                    autorizado.main(claveacceso[0]);
                }
                
            }
        } catch (CertificateException | IOException | InterruptedException ex) {
            Logger.getLogger(Envio.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private static RespuestaSolicitud validarComprobante(byte[] xml) {
        RecepcionComprobantesOfflineService service = new RecepcionComprobantesOfflineService();
        RecepcionComprobantesOffline port = service.getRecepcionComprobantesOfflinePort();
        return port.validarComprobante(xml);

    }

    public void pdfgV2(String printFileName, String cliente, String numero, String email) throws IOException, JRException {
 
        File diretorio = new File("\\\\S-AIRCONTROL\\Nuevo Systema\\Clientes\\" + cliente.replace(" ", "") + "\\Facturas");
        if (!diretorio.exists()) {
            diretorio.mkdirs();
        }
        if (printFileName != null) {
            JasperExportManager.exportReportToPdfFile(printFileName,
                    "\\\\S-AIRCONTROL\\Nuevo Systema\\Clientes\\" + cliente.replace(" ", "") + "\\Facturas\\" + numero + ".pdf");
            File objetofile = new File("\\\\S-AIRCONTROL\\Nuevo Systema\\Clientes\\" + cliente.replace(" ", "") + "\\Facturas\\" + numero + ".pdf");

            if (!generarRide.isSelected()) {
                if (email.contains("@")) {
                    q.email(email, "Factura generada por AIRNET ISP", true, objetofile.toString());
                } else {
                    q.emailVerficaciondeDatos(cliente);
                    //  q.email("","El cliente "+cliente+" no posee un email valido actualizar datos \n ", true, numero);
                }
                System.out.println(cliente);
                c++;
                nuemodeevnios.setText(String.valueOf(c));
                // Desktop.getDesktop().open(objetofile);
            } else {
                System.out.println(cliente);
                c++;
                nuemodeevnios.setText(String.valueOf(c));
            }

        }

    }

    public void ridefacturav2(String datos, String claveacceso) throws IOException, JRException, SQLServerException {
        String jr = "";
        String[] param = null;
        if (datos.contains("-")) {
            param = datos.split("-");
        }
        String numeroau = generarRide.isSelected() ? claveacceso : param[0].replace("-", "").replace(" ", "");
        String fechaautorizacion = generarRide.isSelected() ? fechagenerada : param[2].replace("-", "").replace(" ", "");
        String estado = generarRide.isSelected() ? "GENERADA" : param[1].replace("-", "");
        Map parametro = new HashMap();
        parametro.put("cliente", Cliente);
        parametro.put("direccion", Direccion);
        parametro.put("fechaemision", fechagenerada);
        parametro.put("cedula", cedula);
        parametro.put("fechaautorizacion", fechaautorizacion);
        parametro.put("numerofactura", numerofactura);
        parametro.put("subtotal", subtotal);
        parametro.put("iva", iva);
        parametro.put("total", total);
        parametro.put("numeroauto", numeroau);
        parametro.put("estado", estado);
        parametro.put("SERIEEM", serieem);
        parametro.put("SERIECA", serieca);
        parametro.put("correo", correofinal);
        jr = "\\\\S-AIRCONTROL\\Nuevo Systema\\ArchivosdeImpresion\\RIDE.jasper";
        String printFileName;
        printFileName = JasperFillManager.fillReportToFile(jr, parametro, q.cone());
        pdfgV2(printFileName, Cliente, numerofactura, correofinal);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Envio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Envio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Envio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Envio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Envio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JCalendar FIN;
    private com.toedter.calendar.JCalendar INICIO;
    private javax.swing.JCheckBox envioporid;
    private javax.swing.JCheckBox generarRide;
    private javax.swing.JTextField idaenviar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea noautorizadosjtext;
    private javax.swing.JLabel nuemodeevnios;
    // End of variables declaration//GEN-END:variables
}
